plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
//	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
}

group = 'com.letsseoul'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
//	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.security:spring-security-oauth2-client:5.7.3'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
//	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

//tasks.named('asciidoctor') {
//	configurations "asciidoctorExtensions"
//	inputs.dir snippetsDir
//	dependsOn test
//}

//task copyDocument(type: Copy) {
//	dependsOn asciidoctor
//	println "asciidoctor output: ${asciidoctor.outputDir}"
//	from file("${asciidoctor.outputDir}")
//	into file("src/main/resources/static/docs")
//}

build {
//	dependsOn copyDocument
}

bootJar {
//	dependsOn copyDocument
//	from ("${asciidoctor.outputDir}") {
//		into 'static/docs'
//	}
}